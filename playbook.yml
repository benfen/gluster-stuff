---
- hosts: gluster

  tasks:
    - name: Create mount point for gluster
      become: yes
      file:
        path: "{{ gluster_brick }}"
        state: directory

    - name: Install the glusterfs server
      become: yes
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - glusterfs-server

    - name: Start glusterfs service
      become: yes
      service:
        name: glusterd
        state: started

    - name: Ensure firewall for each instance is opened
      become: yes
      firewalld:
        zone: trusted
        state: enabled
        source: "{{ item }}"
        immediate: yes
        permanent: yes
      with_items: "{{ machine_ips }}"

    # Ansible apparently doesn't apply immediate, permanant changes to zones immediately.
    # Reloading the firewall is a quick and dirty way to make it work.
    - name: Force the firewall to reload to clean up after Ansible
      become: yes
      shell: "firewall-cmd --reload"

    - name: Create gluster volume
      become: yes
      gluster_volume:
        name: "{{ gluster_volume }}"
        force: yes
        state: present
        bricks: "{{ gluster_brick }}"
        cluster: "{{ cluster_ips }}"
      run_once: true

- hosts: client

  tasks:
    - name: Install gluster client dependencies
      become: yes
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - glusterfs
        - glusterfs-fuse

    - name: Ensure gluster mount point exists
      become: yes
      file:
        path: "{{ gluster_client_mount }}"
        state: directory

    - name: Mount gluster filesystem
      become: yes
      mount:
        name: "{{ gluster_client_mount }}"
        fstype: glusterfs
        # The ip used here doesn't matter - it just needs to be one of the file servers
        src: "{{ cluster_ips[0] }}:/{{ gluster_volume }}"
        state: mounted
...

